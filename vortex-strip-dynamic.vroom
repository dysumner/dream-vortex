#!/usr/bin/env vroom-wrapper

from vroom import *

from dreamvortex.engines.vortex import VortexEngine

@LiveCoding.no_update
def init():
   Global.engine = VortexEngine()

def gl_init():
   Global.texture = Texture.from_file('data/brush-white.png')

def frame():
   Global.engine.step()

def display():
   lighting(False)

   color(0.3)
   draw(grid, 10, 10, 10, 10).at([-5, -5, 0])

   transparency(True)
   glBlendFunc(GL_SRC_ALPHA, GL_ONE); 

   Global.texture.bind()

   glDepthMask(GL_FALSE)
   glDisable(GL_CULL_FACE)

   glCullFace(GL_BACK)
   Global.engine.draw()

   #glEnable(GL_CULL_FACE)
   #glCullFace(GL_FRONT)
   #Global.engine.draw()

   #glDepthMask(GL_TRUE)

   Global.texture.unbind()



def scratch():
   transparency(True)

   Global.texture.bind()

   glDepthMask(GL_FALSE)
   glCullFace(GL_BACK)

   for vortex, c in zip(Global.vortices, Global.colors):
      color(c)
      vortex.draw(style='solid')

   glCullFace(GL_FRONT)

   for vortex, c in zip(Global.vortices, Global.colors):
      color(c)
      vortex.draw(style='solid')

   Global.texture.unbind()
