#!/usr/bin/env vroom-wrapper
#
# NAME: dream-vortex.vroom
#

from vroom import *

from dreamvortex import settings, load_dreams, load_strips

from dreamvortex.engines.particle import ParticleEngine
from dreamvortex.engines.strip import StripEngine
from dreamvortex.engines.dream import DreamEngine

from dreamvortex.vortex import Vortex

from math import sin, cos, pi
from random import random, randint
import os

#@LiveCoding.no_update
def init():
   Global.strip = StripEngine()
   Global.particles = ParticleEngine()
   Global.dreams = DreamEngine()

def gl_init():
   load_dreams()
   load_strips()  # to put dreams on strips

   Global.floor_texture = Texture.from_file(get_resource( \
         'floors/DV_Source3_Darkcentered.png'))

#   Global.brush_texture = Texture.from_file(get_resource('brush-white.png'))

def frame():
   Global.strip.step()
   Global.particles.step()
   Global.dreams.step()

def display():
   lighting(False)

   draw_floor()
#   draw_dreams()
   draw_strip()
   draw_particles()

def draw_floor():
   # a grid
#   color(0.3)     # for some reason, color is not being recognized
#   draw(grid, 40, 40, 20, 20).at([-20, -20, -10])

   # a cube
   pushMatrix()
   translate(-20, -20, -50)
#   cube(40.0, style='solid')
   popMatrix()

   # an image
   z = settings['z-offset']
   
   points = [[-50.,-50., z],[50., -50., z],[-50., 50., z],[50.,50.,z]]
   coords = [[0.,0.],[1.,0.],[0.,1.],[1.,1.]]
   floor = Buffer(points)
   floor.loadTexCoordData(coords)
   floor.renderMode('triangles:strip')
   
   color(1.0)
   Global.floor_texture.bind()
   floor.draw(style='solid')
   Global.floor_texture.unbind()

def draw_strip():
   transparency(True)

   glBlendFunc(GL_SRC_ALPHA, GL_ONE); 

   # the following 3 lines are necessary to get backs drawn on strips
   glDepthMask(GL_FALSE)     
   glDisable(GL_CULL_FACE)
   glCullFace(GL_BACK)

   Global.strip.draw()

def draw_strip_orig():    # may not work due to changes in engines.vortex
   transparency(True)

   Global.brush_texture.bind()

   glDepthMask(GL_FALSE)
   glDisable(GL_CULL_FACE)

   Global.strip.draw()

   Global.brush_texture.unbind()

def draw_particles():
   Global.particles.draw()

def draw_dreams():
#   transparency(True)
   transparency(False)

   glDisable(GL_CULL_FACE)

   Global.dreams.draw()
