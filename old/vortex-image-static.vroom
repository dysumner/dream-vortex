#!/usr/bin/env vroom-wrapper

from vroom import *

from dreamvortex import settings
from dreamvortex.vortex import Vortex

from math import sin, cos, pi
from random import random, randint

import os

def init():

   Global.dream_images = [os.path.join('dreams', img) for img in os.listdir('data/dreams')]

   Global.vortices = []

   for _ in range(len(Global.dream_images)):
      points, texcoords = Vortex.image_strip()
      vortex = Buffer(points)
      vortex.loadTexCoordData(texcoords)
      vortex.renderMode('triangles:strip')

      Global.vortices.append(vortex)

def gl_init():
   Global.textures = []
   for img in Global.dream_images: 
      texture = get_resource(img)
      Global.textures.append(Texture.from_file(texture))

def display():
   lighting(False)

   color(0.3)
   draw(grid, 40, 40, 20, 20).at([-20, -20, 0])

   glDisable(GL_CULL_FACE)

   color(white)
   for texture, vortex in zip(Global.textures, Global.vortices):
      texture.bind()
      vortex.draw(style='solid')
      texture.unbind()
